/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package laberintodecretaalpha;

import java.awt.Graphics;
import java.awt.Toolkit;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import sun.audio.AudioPlayer;
import sun.audio.AudioStream;

/**
 *
 * @author M!ke
 */
public class VentanaMenuPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form VentanaMenuPrincipal
     */
    
    public static VentanaMenuPrincipal instancia = null;
    
    
    public static VentanaMenuPrincipal Singleton()
    {
        if(instancia == null)
        {
            instancia = new VentanaMenuPrincipal();
            instancia.initComponents();
            instancia.setLocationRelativeTo(null);// Centrar la ventana
            instancia.labelJugar.setIcon(ImageIconDic.singleton().getImageIcon("jugar"));
            instancia.labelConfig.setIcon(ImageIconDic.singleton().getImageIcon("config"));
            instancia.fondo.setIcon(ImageIconDic.singleton().getImageIcon("fondoMenuPrincipal"));
            instancia.repaint();
        }
        return instancia;
    }
    
    
    @Override
    public void paint(Graphics g)
    {
        //jPanel1.getGraphics().drawImage(BufferedImageDic.Singleton().imagen("Gates"), 0, 0, null);
        jPanel1.paintAll(jPanel1.getGraphics());
    }
    
    
    public VentanaMenuPrincipal() {
        initComponents();
        setIcon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        labelJugar = new javax.swing.JLabel();
        labelConfig = new javax.swing.JLabel();
        fondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Laberinto de Creta");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(null);

        labelJugar.setText("jugar");
        labelJugar.setPreferredSize(new java.awt.Dimension(144, 57));
        labelJugar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                labelJugarMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                labelJugarMouseExited(evt);
            }
        });
        labelJugar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                labelJugarMouseMoved(evt);
            }
        });
        jPanel1.add(labelJugar);
        labelJugar.setBounds(130, 110, 160, 80);
        labelJugar.getAccessibleContext().setAccessibleDescription("jugar");

        labelConfig.setText("config");
        labelConfig.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                labelConfigMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                labelConfigMouseExited(evt);
            }
        });
        labelConfig.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                labelConfigMouseMoved(evt);
            }
        });
        jPanel1.add(labelConfig);
        labelConfig.setBounds(130, 200, 180, 70);

        fondo.setText("jLabel1");
        jPanel1.add(fondo);
        fondo.setBounds(0, 0, 400, 300);

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 300));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void labelJugarMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelJugarMouseMoved
        // TODO add your handling code here:
         instancia.labelJugar.setIcon(ImageIconDic.singleton().getImageIcon("jugarHover"));
    }//GEN-LAST:event_labelJugarMouseMoved

    private void labelJugarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelJugarMousePressed
        // TODO add your handling code here:
        String botonJugarAudio = "load.wav";
        InputStream in = null;
        try {
            in = new FileInputStream(botonJugarAudio);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(VentanaMenuPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        AudioStream nivel1 = null;
        try {
            nivel1 = new AudioStream(in);
        } catch (IOException ex) {
            Logger.getLogger(VentanaMenuPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if(VentanaConfiguracion.prenderMusica)
        {
            AudioPlayer.player.start(nivel1);
        }
        
        
        VentanaMenuPrincipal.Singleton().setVisible(false);
        try {
            try {
                Control.Singleton().setEstadoJuego(Control.EstadosJuego.Seleccion);
                //AudioPlayer.player.stop(nivel1);
            } catch (InterruptedException ex) {
                Logger.getLogger(VentanaMenuPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (IOException ex) {
            Logger.getLogger(VentanaMenuPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_labelJugarMousePressed

    private void labelJugarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelJugarMouseExited
        // TODO add your handling code here:
        instancia.labelJugar.setIcon(ImageIconDic.singleton().getImageIcon("jugar"));
    }//GEN-LAST:event_labelJugarMouseExited

    private void labelConfigMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelConfigMouseExited
        // TODO add your handling code here:
        instancia.labelConfig.setIcon(ImageIconDic.singleton().getImageIcon("config"));
    }//GEN-LAST:event_labelConfigMouseExited

    private void labelConfigMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelConfigMouseMoved
        // TODO add your handling code here:
        instancia.labelConfig.setIcon(ImageIconDic.singleton().getImageIcon("configHover"));
    }//GEN-LAST:event_labelConfigMouseMoved

    private void labelConfigMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelConfigMousePressed
        // TODO add your handling code here:
        String botonJugarAudio = "load.wav";
        InputStream in = null;
        try {
            in = new FileInputStream(botonJugarAudio);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(VentanaMenuPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        AudioStream nivel1 = null;
        try {
            nivel1 = new AudioStream(in);
        } catch (IOException ex) {
            Logger.getLogger(VentanaMenuPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if(VentanaConfiguracion.prenderMusica)
        {
            AudioPlayer.player.start(nivel1);
        }
        
        
        
        VentanaMenuPrincipal.Singleton().setVisible(false);
        try {
            try {
                Control.Singleton().setEstadoJuego(Control.EstadosJuego.Configuracion);
                //AudioPlayer.player.stop(nivel1);
            } catch (InterruptedException ex) {
                Logger.getLogger(VentanaMenuPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (IOException ex) {
            Logger.getLogger(VentanaMenuPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_labelConfigMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaMenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new VentanaMenuPrincipal().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel fondo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelConfig;
    private javax.swing.JLabel labelJugar;
    // End of variables declaration//GEN-END:variables

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("icono/icono2.gif")));
    }
}
